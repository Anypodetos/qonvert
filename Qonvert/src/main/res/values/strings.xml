<!--
Copyright 2020, 2021, 2022 Anypodetos (Michael Weber)

This file is part of Qonvert.

Qonvert is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Qonvert is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Qonvert. If not, see <https://www.gnu.org/licenses/>.

Contact: <https://lemizh.conlang.org/home/contact.php?about=qonvert>
-->

<resources>
    <string name="app_name" translatable="false">Qonvert</string>

    <!-- Main -->
    <string name="b2" translatable="false">bin</string>
    <string name="b3" translatable="false">ter</string>
    <string name="b6" translatable="false">sen</string>
    <string name="b8" translatable="false">oct</string>
    <string name="b10" translatable="false">dec</string>
    <string name="b12" translatable="false">doz</string>
    <string name="b16" translatable="false">hex</string>
    <string name="b20" translatable="false">vig</string>
    <string name="b26" translatable="false">hxv</string>

    <string name="complement">complement</string>
    <string name="edit_hint">Type a number ∈ ℚ</string>
    <string name="clear_hint">Clear input</string>
    <string name="base">%1$s: base %2$d, %3$s</string>
    <string name="clipboard_asIs">Copy to clipboard as is</string>
    <string name="clipboard_rep">… with overlined repeating part</string>
    <string name="clipboard_fraction">… as pretty fraction</string>
    <string name="clipboard_noQuotes">… without the quotes</string>
    <string name="clipboard_compat">… as compatible as possible</string>
    <string name="clipboard_ok">Copied to clipboard</string>
    <string name="to_fraction">Converted to fraction to preserve precision</string>
    <string name="to_history_indep">Removed reference to history entry</string>
    <string name="range_toast">%1$s: digit range %2$s..%3$s</string>
    <string name="range_toast_roman">%1$s: Roman numerals or digit range %2$s..%3$s</string>
    <string name="range_toast_onlyRoman">%1$s: Roman numerals</string>
    <string name="no_q_number">This button would show all available formats. However, there is no valid number in the input line.</string>
    <string name="no_history">The history is empty. Type a number, then tap Enter or delete it with the 🗑 button, to store it there.</string>

    <string name="err_quote">is only valid at start of input.</string>
    <string name="err_bracket">is only valid around continued fraction.</string>
    <string name="err_brace">is only valid around Egyptian fraction.</string>
    <string name="err_semicolon">in continued or Egyptian fraction is only valid once and before any commas.</string>
    <string name="err_comma">in continued or Egyptian fraction is only valid after \";\".</string>
    <string name="err_underscore">in mixed number is only valid once and before \"/\".</string>
    <string name="err_slash">in fraction is only valid once.</string>
    <string name="err_twoPoints">– the radix point – is only valid once.</string>
    <string name="err_twoReps">– the repetition mark – is only valid once.</string>
    <string name="err_baseTokenOrMinus">is only valid at start of number.</string>
    <string name="err_notInHistory">denotes a history entry that doesn’t exist.</string>
    <string name="err_ellipsis">denotes a number that’s been cut off.</string>
    <string name="err_infinity">[Those having problems with infinities] aren’t nearly appreciative enough of projective geometry. (Grant Sanderson)</string>
    <string name="err_undefined">Does your input have Buddha-nature?</string>
    <string name="err_onlyGreek">is only valid in Greek numerals.</string>
    <string name="err_noGreek">is neither a valid Greek nor an Arabic numeral.</string>
    <string name="err_onlyRoman">is only valid in Roman numerals.</string>
    <string name="err_noRoman">is neither a valid Roman nor an Arabic numeral.</string>
    <string name="err_fraction">is only valid at end of integer.</string>
    <string name="err_generic">isn’t a valid character.</string>

    <string name="menu_formats">All formats</string>
    <string name="menu_history">History</string>
    <string name="menu_interval">Play interval</string>
    <string name="menu_interval_list">Musical intervals</string>
    <string name="menu_settings">Settings</string>
    <string name="menu_help">Help</string>
    <string name="menu_cheatSheet">Cheat sheet</string>
    <string name="menu_whatsNew">What’s new</string>
    <string name="menu_about">About &amp; Licenses</string>

    <string name="octaves">%d octaves</string>
    <string name="between_intervals">between %1$s and %2$s</string>
    <string name="interval_grammar_nom" />
    <string name="interval_grammar_between" />
    <string name="no_interval">Number must be in the range %1$s..%2$s</string>

    <!-- Lists / Dialogs -->
    <string name="menu_dots" translatable="false">⋮</string>
    <string name="formats_hint">Show all formats</string>
    <string name="expand_hint">Expand / collapse</string>
    <string name="item_header" translatable="false">%s =</string>
    <string name="egyptian_method">Egyptian fraction: %s</string>
    <string name="select_all">Select all</string>
    <string name="copy">Copy</string>
    <string name="clipboard_all_ok">Copied all %d entries to clipboard</string>
    <string name="share">Share</string>
    <string name="share_all">Share all %d entries with</string>
    <string name="delete">Delete</string>
    <string name="delete_history_q">Delete the complete history?</string>
    <plurals name="delete_q">
        <item quantity="one">Delete the selected entry?</item>
        <item quantity="other">Delete the selected entries?</item>
    </plurals>
    <string name="delete_this_q">Delete this entry?</string>
    <string name="cant_be_undone">This can’t be undone.</string>
    <string name="yes">Yes</string>
    <string name="no">No</string>
    <string name="close">Close</string>
    <string name="standard_output">standard</string>
    <string name="pretty_output">pretty</string>
    <string name="compatible_output">compatible output</string>

    <!-- Settings -->
    <string name="out_header">Output</string>
    <string name="digits_title">Maximum digits in fractional part</string>
    <string name="group_title">Group digits</string>
    <string name="group_hint">by 4 in bases 2, 4, 8, 16, 32, else by 3</string>
    <string name="lowercase_title">Lower case digits</string>
    <string name="natural_title">Show natural numbers as</string>
    <string name="apostrophus_title">Roman apostrophus</string>
    <string name="egyptian_title">Egyptian fractions</string>

    <string name="feedback_header">Feedback</string>
    <string name="range_title">Show digit range on base change</string>
    <string name="wrongDigits_title">Warn on non-standard input</string>
    <string name="wrongDigits_hint">turns weird but still interpretable input orange (e.g.&#xA0;digit out of range)</string>

    <string name="appearance_header">Appearance</string>
    <string name="buttons_title">Show base buttons</string>
    <string name="keyboard_title">Use custom keyboard</string>
    <string name="keyboard_hint">instead of Android’s default keyboard</string>
    <string name="size_title">Text size</string>
    <string name="theme_title">Theme</string>

    <!-- Help -->
    <string name="logo_hint">The Qonvert logo is a dashing version of ℚ, the symbol for the set of rational numbers.</string>
    <string name="share_app">Convert rational numbers between different bases and different representations:\n\nhttps://play.google.com/store/apps/details?id=org.tessoft.qonvert\n\nor\n\nhttps://qonvert.en.uptodown.com/android</string>
    <string name="title_about">About Qonvert v%s</string>

    <!-- CSS -->
    <string name="css" translatable="false"><![CDATA[
<style>
    body {padding-top: 1.5em}
    h1, h2, h3 {font-family: serif}
    h1 {font-size: 140%}
    h2 {font-size: 125%; border-radius: 0.2em; background: rgb(224, 224, 224)}
    h3 {font-size: 115%}
    ul {padding-left: 1.5em}
    a {color: rgb(224, 83, 0)} /* orange_light */
    code {border: 1px solid rgb(224, 224, 224); border-bottom-color: rgb(224, 83, 0); border-radius: 2px}
    code.apostrophus {font-family: inherit}
    .roman-frame {border: 1px solid black; border-bottom: none}
</style>
    ]]></string>
    <string name="css_dark" translatable="false"><![CDATA[
<style>
    body {color: white; background: rgb(18, 18, 18)}
    h2 {background: rgb(64, 64, 64)}
    code {border-color: rgb(64, 64, 64); border-bottom-color: rgb(168, 62, 0)} /* orange_dark */
    .roman-frame {border-color: white}
</style>
    ]]></string>
    <string name="css_blue" translatable="false"><![CDATA[
<style>
    a {color: rgb(0, 157, 224)} /* azure_light */
    code {border-bottom-color: rgb(0, 118, 168)} /* azure_dark */
</style>
    ]]></string>

    <!-- Help -->
    <string name="help"><![CDATA[
<h2>Overview</h2>
<p>This app lets you convert numbers from the set ℚ of rational numbers between different bases (including nonstandard numeral systems)
and between different representations such as positional notation and fractions (including improper, mixed, continued and Egyptian ones).
The numbers can have basically arbitrary size and precision.</p>
<p>Long-tap a key on the keyboard to access the second character. You can vanish the keyboard by tapping ◀ on the navigation bar or by swiping down;
tap the input line for it to re-emerge.</p>
<p>Short-tap a result to copy it to the input line, and long-tap to copy it to the clipboard.</p>

<h2>Choosing input and output systems</h2>
<p>Choose an input <a href="https://en.wikipedia.org/wiki/Radix">base</a> from 2 to 36 via the slider or the shortcut buttons in the lower part of the screen,
and an output base via the corresponding controls in the upper part.</p>
<p>The coloured buttons on the right let you switch between various kinds of numeral systems (standard, balanced, bijective, and Roman), on which more below.
Not every option can be combined with every base; for invalid combinations, the buttons are greyed and the app uses the standard positional number system.</p>

<h2>Standard positional notation</h2>
<p>If you choose to convert from standard DECimal (base 10) to standard HEXadecimal (base 16), an input of (say) <code>345</code> is interpreted as
<strong>3</strong>×10<sup>2</sup>+<strong>4</strong>×10<sup>1</sup>+<strong>5</strong>×10<sup>0</sup> and converted to
<strong>1</strong>×16<sup>2</sup>+<strong>5</strong>×16<sup>1</sup>+<strong>9</strong>×16<sup>0</sup>, which is displayed as 159.</p>
<p>Digits from <code>0</code> to <code>9</code> work as expected. Those with values higher than 9 are represented by letters, from <code>A</code>&nbsp;=&nbsp;10
to <code>Z</code>&nbsp;=&nbsp;35; and they are case insensitive. Spaces are ignored.</p>

<h3>Non-integers</h3>
<p>Digits after a radix point <code>.</code> are of course interpreted as the fractional part of the number: <code>1.A6</code> in DOZenal (base 12) is
<strong>1</strong>×12<sup>0</sup>+<strong>10</strong>×12<sup>−1</sup>+<strong>6</strong>×12<sup>−2</sup>&nbsp;=&nbsp;1.875. If there is a
<a href="https://en.wikipedia.org/wiki/Repeating_decimal">repeating part</a>, mark its start with a single quote <code>\'</code>:
For example, <code>0.1\'486</code> means 0.1486486486…, and <code>21\'3.4</code> means 213.43434….</p>
<p>The result of your conversion has always either a finite number of digits after the radix point or a repeating part. Sometimes, though, the representation
can be very long. To keep the app from freezing, the search for an exact representation stops after 300 digits by default. You can change this value in
the settings.</p>
<p>If your screen is too small to show all the output formats (positional, fraction, mixed number, continued fraction, Egyptian fraction),
you can swipe the output area up and down.</p>

<h2>Fractions</h2>
<p>Type a numerator and a denominator separated with a slash <code>/</code>, as in <code>6/8</code> or <code>1.5/2</code>. Fractions are reduced or expanded
as necessary, so both of these inputs will result in 3/4.</p>
<p>For mixed numbers, separate integer and fractional part with an underscore <code>_</code>: for example <code>1_9/8</code>, or something more complicated
such as <code>1.\'3&nbsp;_&nbsp;1/3</code>. Fractions with an absolute value over 1 will be shown both as improper fractions (17/8 or 5/3 in our examples)
and as mixed numbers (2_1/8 or 1_2/3).</p>

<h3>Continued fractions</h3>
<p><a href="https://en.wikipedia.org/wiki/Continued_fraction">Continued fractions</a> start with an integer part, followed by a semicolon <code>;</code> and
a comma-separated list of denominators. Square brackets are used for output but are optional for input.</p>
<p><code>2;3,4</code>, for example, means <strong>2</strong>&nbsp;+&nbsp;1/(<strong>3</strong>&nbsp;+&nbsp;1/<strong>4</strong>), which evaluates to
2.\'307692, 30/13, and 2_4/13.</p>
<p>Input of non-integer numbers, including fractions, is okay: <code>1.5;&nbsp;2/3,&nbsp;1_1/5</code> is simplified to [2;&nbsp;6], which only contains integers.
All continued fractions are displayed with positive denominators, so <code>-3;-1,-1,-18</code> becomes [−4;&nbsp;2,&nbsp;18].</p>

<h3>Egyptian fractions</h3>
<p><a href="https://en.wikipedia.org/wiki/Egyptian_fraction">Egyptian fractions</a> are sums of unit fractions. Input works as with continued fractions,
only with curly braces: <code>{2;3,4}</code> is interpreted as <strong>2</strong>&nbsp;+&nbsp;1/<strong>3</strong>&nbsp;+&nbsp;1/<strong>4</strong>,
evaluating to 2.58\'3, 31/12, 2_7/12, and [2;&nbsp;1,&nbsp;1,&nbsp;2,&nbsp;2].</p>
<p>For every rational number there are infinitely many Egyptian fraction representations. In the settings you can choose between various calculation methods
for the main screen. The results of the other methods show up when you tap ⛶ in the title bar – they are identical for some numbers,
while for others they differ dramatically.</p>
<p>Calculation of an Egyptian fraction may be cut off if it gets too long; the limit depends on the “Maximum digits in fractional part” in the settings.</p>

<h2>Negative numbers</h2>
<p>You can type negative numbers either in ordinary notation with a leading minus <code>-</code>, or in
<a href="https://en.wikipedia.org/wiki/Method_of_complements">complement notation</a> with two leading points <code>..</code>: these points basically mean
“the highest digit in this base repeated all the way to the left”. Complement notation is known from computing, where −1 is represented as hexadecimal FFFFFFFF,
−2 as FFFFFFFE, and so on (with as many F’s as there is space). So, typing <code>..FFD</code> or simply <code>..D</code> in hexadecimal, or <code>..997</code>
or simply <code>..7</code> in decimal, all mean −3.</p>
<p>Output of negative numbers is either in ordinary or complement notation, depending on the switch at the top right.</p>

<h2>Input with base tokens</h2>
<p>You can type in numbers in standard binary, octal, decimal, dozenal and hexadecimal without changing the input base, and even use different bases for integer part,
numerator and denominator of a fraction, or for the numbers in a continued or Egyptian fraction. To do this, prefix a number with one of these tokens:</p>
<ul>
 <li>binary: <code>@</code></li>
 <li>octal: <code>%23</code></li>
 <li>decimal: <code>$</code>, <code>€</code>, <code>£</code>, or <code>¥</code></li>
 <li>dozenal: <code>%</code></li>
 <li>hexadecimal: <code>&</code></li>
</ul>
<p>Try typing <code>@10010&nbsp;/&nbsp;&13</code> or <code>%2312;&nbsp;@1010,&nbsp;$10</code>.</p>

<h2>Non-standard numeral systems</h3>
<h3>Balanced</h3>
<p>In balanced numeral systems (the best-known being <a href="https://en.wikipedia.org/wiki/Balanced_ternary">balanced ternary</a>, i.e. base 3), the letters
<code>J</code> to <code>Z</code> have <em>negative</em> values, with <code>Z</code>&nbsp;=&nbsp;−1, <code>Y</code>&nbsp;=&nbsp;−2, down to
<code>J</code>&nbsp;=&nbsp;−17. They only work with odd bases. Thus, in balanced ternary, <code>10Z</code> means
<strong>1</strong>×3<sup>2</sup>+<strong>0</strong>×3<sup>1</sup><strong>−1</strong>×3<sup>0</sup>&nbsp;=&nbsp;8. Negative numbers don’t need a minus sign
in this notation: <code>Z01</code> means <strong>−1</strong>×3<sup>2</sup>+<strong>0</strong>×3<sup>1</sup>+<strong>1</strong>×3<sup>0</sup>&nbsp;=&nbsp;−8</p>
<p>Complement notation is disabled for balanced numeral systems.</p>

<h3>Bijective</h3>
<p>In a <a href="https://en.wikipedia.org/wiki/Bijective_numeration">bijective system</a> of a base b, the digits go from 1 to b instead of 0 to b−1.
There are two variants: “bijective 1” uses the digits <code>1</code> to <code>9</code> and <code>A</code> to <code>Z</code> as in standard notation;
“bijective A” uses <code>A</code>&nbsp;=&nbsp;1, <code>B</code>&nbsp;=&nbsp;2,&nbsp;… <code>Z</code>&nbsp;=&nbsp;26 and only works up to hexavigesimal (base 26).
So, the first natural numbers in decimal bijective 1 are 1, 2, 3, 4, 5, 6, 7, 8, 9, A&nbsp;(=10), 11, 12,&nbsp;…, 19, 1A, 21,&nbsp;…,
and the first natural numbers in hexavigesimal bijective A are A, B, C, D,&nbsp;…, X, Y, Z, AA, AB, AC,&nbsp;…. Zero is technically an empty string; it is
denoted with “/”.</p>
<p>Numbers with a radix point don’t work well with bijective systems, so non-integers are only displayed as fractions.</p>

<h3>Greek numerals</h3>
<p>Currently, only output of <a href="https://en.wikipedia.org/wiki/Greek_numerals">Greek (Milesian) natural numerals</a> is officially supported.
They are followed by a keraia (ʹ) to better distinguish them from Roman numerals (see below).
Myriads (10&nbsp;000s) are marked with a dot, following Diophantus. For very large numbers, the output gets pretty weird.</p>

<h3>Roman numerals</h3>
<p><a href="https://en.wikipedia.org/wiki/Roman_numerals">Roman numerals</a> are always base 10. They can contain the letters <code>I V X L C D M</code>.
Symbols for larger values are <code class="apostrophus">ↁ</code>&nbsp;=&nbsp;5000, <code class="apostrophus">ↂ</code>&nbsp;=&nbsp10&nbsp;000,
<code class="apostrophus">ↇ</code>&nbsp;=&nbsp;50&nbsp;000, and <code class="apostrophus">ↈ</code>&nbsp;=&nbsp;100&nbsp;000.
(If you are using the Android keyboard instead of Qonvert’s, you can compose them as <code>I)) ((I)) I))) (((I)))</code>.)</p>
<p>One traditional way for expressing <em>still</em> larger numbers is to enclose them in a frame to multiply with 100&nbsp;000, or in nested frames
for even higher powers. Qonvert uses pipes <code>|</code> for this purpose:
<code style=\"white-space: nowrap\">|VI|((I))MM</code>&nbsp;=&nbsp;<span class="roman-frame">VI</span>ↂMM&nbsp;=&nbsp;6&nbsp;12000.
You can omit the leading pipes, and replace pipes with exclamation marks:
<code style=\"white-space: nowrap\">||V|M|II</code>&nbsp;=&nbsp;<code style=\"white-space: nowrap\">V!M!II</code>&nbsp;=&nbsp;5&nbsp;01000&nbsp;00002.
(The Romans certainly wouldn’t have recognised this notation, but there doesn’t seem to be any valid way of expressing huge numbers in Roman.)</p>
<p>The integer part may be followed by <code>S</code> (<i>semis</i>) for a half and one or more dots for a twelfth each.
<code>N</code> for <i>nulla</i> or <i>nihil</i> means zero.</p>
<p>When Roman input is set, Arabic (i.e. standard decimal) input is also accepted so you need less switching between input systems.</p>
<p>Additionally, when an output system other than Roman is selected, positive integers are <em>also</em> displayed as Roman numerals in the third output line.</p>

<h2>Unicode characters</h2>
<p>Inputs that are integers from hexadecimal <code>20</code> to <code>31FFF</code> (decimal <code>32</code> to <code>204&nbsp;799</code>) are not only
converted to their representation in the output base and to Greek and Roman numerals, but also to the corresponding
<a href="https://en.wikipedia.org/wiki/Unicode">Unicode</a> character. (If the output area is too cluttered for your taste, you can hide any or all of these
in the settings.)</p>
<p>Conversely, type double quotes <code>\"</code> followed by any character to find its Unicode encoding. This only works for single characters,
not composed ones such as certain letter-<a href="https://en.wikipedia.org/wiki/Diacritic">diacritic</a> combinations, people with skin tones, or flags.</p>
<p>The Web has excellent sources to find Unicode characters by name; but if you want to know the Unicode representation of the tortoise in balanced undecimal,
Qonvert is your <strong>only</strong> source. (The answer is 1YX&nbsp;215.)</p>
<p>And if anybody asks “why”, the answer is “because”.</p>
    ]]></string>

    <!-- Cheat sheet -->
    <string name="cheatSheet"><![CDATA[
<h2>Gestures</h2>
<ul>
 <li><strong>Output area</strong>: short-tap copies to input line and switches input and output bases, long-tap copies to clipboard.</li>
 <li><strong>Base buttons</strong>: left/right swipe decreases/increases base by 1.</li>
 <li>“<strong>in: base</strong>” and “<strong>out: base</strong>”: tap displays digit range for currently selected base and number system.</li>
 <li><strong>Number system buttons</strong>: long-tap toggles between standard and balanced.</li>
 <li><strong>Clear button (🗑)</strong>: long-tap sets input and output to standard decimal.</li>
 <li><strong>Qonvert keyboard</strong>: long-tap accesses the second character on a key; ◀ or swiping down vanishes it,
 and tapping the input line lets it re-emerge.</li>
 <li><strong>List entries</strong> in history etc.: short-tap copies to input line, long-tap toggles selection.</li>
</ul>

<h2>Input syntax</h2>
<h3>Base tokens</h3>
<ul>
 <li><code>@</code>: standard binary (2)</li>
 <li><code>%23</code>: standard octal (8)</li>
 <li><code>$</code>, <code>€</code>, <code>£</code>, <code>¥</code>: standard decimal (10)</li>
 <li><code>%</code>: standard dozenal (12)</li>
 <li><code>&</code>: standard hexadecimal (16)</li>
</ul>

<h3>Digits</h3>
<ul>
 <li><code>0</code>..<code>9</code></li>
 <li><code>A</code>..<code>Z</code>: normally 10..35, in bijective A: 1..26</li>
 <li><code>J</code>..<code>Z</code> in balanced: −17..−1</li>
</ul>

<h3>Negative numbers</h3>
<ul>
 <li><code>-</code>: minus sign</li>
 <li><code>..</code>: complement notation</li>
</ul>

<h3>Non-integers</h3>
<ul>
 <li><code>.</code>: radix point</li>
 <li><code>\'</code>: start of repeating part</li>
 <li><code>/</code>: fraction slash</li>
 <li><code>_</code>: separates integer and fraction in a mixed number (e.g. <code>2_1/8</code>)</li>
 <li><code>[ ; , , ]</code>: continued fraction (the brackets are optional)</li>
 <li><code>{ ; , , }</code>: Egyptian fraction</li>
</ul>

<h3>Roman numerals</h3>
<ul>
 <li><code>I V X L C D M</code> or <code class="apostrophus">ↀ</code>: 1..1000</li>
 <li><code class="apostrophus">ↁ ↂ ↇ ↈ</code> or <code>I)) ((I)) I))) (((I)))</code>: 5000, 10&nbsp;000, 50&nbsp;000, 100&nbsp;000</li>
 <li><code>|</code> or <code>!</code>: multiplies by 100&nbsp;000</li>
 <li><code>. : S</code> (and up to 5 dots): <i>uncia</i>&nbsp;=&nbsp;twelfth, <i>sextans</i>&nbsp;=&nbsp;sixth,
 <i>semis</i>&nbsp;=&nbsp;half</li>
 <li><code>N</code>: <i>nulla/nihil</i>&nbsp;=&nbsp;zero</li>
</ul>

<h3>Unicode characters</h3>
<ul>
 <li><code>\"💃</code>: Dancer</li>
</ul>
    ]]></string>

    <!-- What’s new -->
    <string name="whatsNew"><![CDATA[
<h2>Version 1.3.0</h2>
<p>Qonvert has a <strong>new keyboard</strong>! (for Android version 5 Lollipop and higher) – It adapts to the current input system and to your phone’s
orientation. To access the second character on a key, long-tap it. You can vanish the keyboard by tapping ◀ on the navigation bar or by swiping down;
tap the input line for it to re-emerge.<br>
If you want the standard Android keyboard back, you can choose it in the Settings.</p>
<p>Tap ♫ in the title bar to play a musical interval with the given frequency ratio. As of this version, the <strong>name of the interval</strong>,
or the nearest named interval, is displayed. The menu item “Musical intervals” lists all known interval names and their values.</p>
<p>The list screens (All formats, History, Musical intervals) now have a third option for displaying, copying and sharing numbers: “<strong>compatible</strong>”,
which aims at maximum compatibility with other mathematics apps (at least for the less obscure number bases and systems).</p>
<p>Natural numbers are now also shown as <strong>Greek (Milesian) numerals</strong>. If the output area is too cluttered for your taste, you can hide them
in the settings (or you could hide the Roman numerals, or the Unicode symbols).</p>
<p>Next to Unicode symbols in the history and on the all formats screen there’s a new button opening a <strong>web link about that symbol</strong>
(on fileformat.info).</p>

<h2>Version 1.2.0</h2>
<p>There is a new screen called <strong>All formats</strong> which opens when you tap ⛶. It lets you copy and share your calculation results.
The appearance of the history is new, providing the same functionality as the all formats screen.</p>
<p>Output of <strong>Egyptian fractions</strong> is supported now. You can choose a calculation method for the main screen in the settings;
the results of the other methods are available on the all formats screen.</p>
<p>Support for <strong>German</strong> was added. Also, speed has been improved significantly.</p>

<h2>Version 1.1.0</h2>
<p>The switches for balanced numeral systems have been replaced with dropdown menus which let you choose between standard, balanced, <strong>bijective</strong>
and <strong>Roman</strong> numerals. You can still toggle between standard and balanced systems with a long tap. See the Help page for how these new systems work.</p>
<p>On the Settings screen, you can activate new base buttons for <strong>hexavigesimal</strong> (base 26).</p>
<p>Input of <strong>Egyptian fractions</strong> is supported: <code>{2;3,4}</code> is interpreted as 2&nbsp;+&nbsp;1/3&nbsp;+&nbsp;1/4 = 2_7/12.</p>
<p>You can now use <strong>fraction characters</strong> such as <code>¾</code> and use them in numbers: <code>2¾</code>.</p>
<p>The main menu has a new entry “<strong>Cheat sheet</strong>” with an overview over the control gestures on the main screen, as well as the input syntax.
(Now you can swipe right to get there.)</p>
<p>Many fixes and improvements – for example, calculating digits of long repeating parts is faster now.</p>

<h2>Version 1.0.0</h2>
<p>Initial release with standard and balanced numeral systems as well as Roman output for positive integers and Unicode characters,
and playing musical intervals (by tapping ♫).</p>
    ]]></string>

    <!-- About -->
    <string name="about"><![CDATA[
<h2>Thank you for using Qonvert!</h2>
<p>This is a toy and maybe an educational tool, and it’s free. It was written by me, Anypodetos. If you have any suggestions or questions, or you want to report a bug,
or you just want to tell me whether you like this app, please <a href="https://lemizh.conlang.org/home/contact.php?about=qonvert">contact me</a>.</p>
<p>Source code:<br><a href="https://github.com/Anypodetos/qonvert">https://github.com/Anypodetos/qonvert</a></p>
<p>My Wikipedia page:<br><a href="https://en.wikipedia.org/wiki/User:Anypodetos">https://en.wikipedia.org/wiki/User:Anypodetos</a></p>
<p>My conlanging homepage:<br><a href="https://lemizh.conlang.org">https://lemizh.conlang.org</a></p>

<h2>Acknowledgments</h2>
<p>The algorithms for calculating Egyptian fractions are from <a href="https://www.ics.uci.edu/~eppstein/numth/egypt/intro.html">David Eppstein’s page</a>
and <a href="https://ami.uni-eszterhazy.hu/uploads/papers/finalpdf/AMI_42_from129to134.pdf">a paper by Gyimesi and Nyul</a>;
see there for explanations on how they work.</p>

<h2>GNU General Public License</h2>
<p>Copyright 2020, 2021, 2022 Anypodetos (Michael Weber)</p>
<p>Qonvert is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p>
<p>Qonvert is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>
<p>You should have received a copy of the GNU General Public License along with Qonvert.
If not, see <a href="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</a>.</p>

<h2>SIL Open Font License</h2>
<p>The logo is a modification of the letter Ꝙ (“Latin capital letter Q with diagonal stroke”) in the font <a href="https://software.sil.org/doulos/">Doulos SIL</a>,
which is available under the <a href="https://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=ofl">SIL Open Font License</a>.</p>

<h2>Creative Commons License</h2>
<p>The icons are mostly by Google and are available under the
<a href="https://creativecommons.org/licenses/by/4.0/deed.en">Creative Commons Attribution 4.0 International</a> license.</p>

<h2>Probably some free License</h2>
<p>I used Maddie Abboud’s really neat <a href="https://mabboud.net/android-tonebuzzer-generator/">Tone/Buzzer Generator</a> for playing intervals. It seems to be free,
but I couldn’t find an actual license on her page.</p>
    ]]></string>
</resources>