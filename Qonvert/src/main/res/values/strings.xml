<?xml version="1.0" encoding="utf-8"?>

<!--
Copyright 2020, 2021, 2022, 2023 Anypodetos (Michael Weber)

This file is part of Qonvert.

Qonvert is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Qonvert is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Qonvert. If not, see <https://www.gnu.org/licenses/>.

Contact: <https://lemizh.conlang.org/home/contact.php?about=qonvert>
-->

<resources>
    <string name="app_name" translatable="false">Qonvert</string>

    <!-- Main -->
    <string name="bPos" translatable="false">+</string>
    <string name="bNeg" translatable="false">—</string>
    <string name="bPosNeg" translatable="false">±</string>
    <string name="b1" translatable="false">phi</string>
    <string name="b2" translatable="false">bin</string>
    <string name="b3" translatable="false">ter</string>
    <string name="b6" translatable="false">sen</string>
    <string name="b8" translatable="false">oct</string>
    <string name="b10" translatable="false">dec</string>
    <string name="b12" translatable="false">doz</string>
    <string name="b16" translatable="false">hex</string>
    <string name="b20" translatable="false">vig</string>
    <string name="b26" translatable="false">hxv</string>
    <string name="b60" translatable="false">sex</string>

    <string name="complement">complement</string>
    <string name="dms">DMS</string>
    <string name="edit_hint">Type a number ∈ ℚ</string>
    <string name="clear_hint">Clear input</string>
    <string name="base">%1$s: base %2$s, %3$s</string>
    <string name="just_base">base %s</string>
    <string name="base_message">For base φ (the golden ratio), type ‘1’.</string>
    <string name="clipboard_asIs">Copy to clipboard as is</string>
    <string name="clipboard_dissect">… with dissected digits</string>
    <string name="clipboard_rep">… with overlined repeating part</string>
    <string name="clipboard_fraction">… as pretty fraction</string>
    <string name="clipboard_withUnicodeName">… with Unicode name</string>
    <string name="clipboard_noQuotes">… without quotes</string>
    <string name="clipboard_compat">… as compatible as possible</string>
    <string name="clipboard_ok">Copied to clipboard</string>
    <string name="to_fraction">Converted to fraction to preserve precision</string>
    <string name="to_tokenFree">Removed base tokens from input string</string>
    <string name="range_toast">%1$s: digit range %2$s…%3$s</string>
    <string name="range_toast_greek">%1$s: Greek numerals or digit range %2$s…%3$s</string>
    <string name="range_toast_onlyGreek">%1$s: Greek numerals</string>
    <string name="range_toast_roman">%1$s: Roman numerals or digit range %2$s…%3$s</string>
    <string name="range_toast_onlyRoman">%1$s: Roman numerals</string>
    <string name="no_q_number">There is no valid number in the input line.</string>
    <string name="no_history">The history is empty. Type a number, then tap Enter or delete it with the 🗑 button, to store it there.</string>
    <string name="no_history_short">The history is empty.</string>
    <string name="dont_show_again">Don’t show this message again.</string>

    <string name="err_quote">is only valid at start or end of input.</string>
    <string name="err_bracket">is only valid around continued fraction.</string>
    <string name="err_brace">is only valid around Egyptian fraction.</string>
    <string name="err_semicolon">in continued or Egyptian fraction is only valid once and before any commas.</string>
    <string name="err_comma">in continued or Egyptian fraction is only valid after \";\".</string>
    <string name="err_underscore">in mixed fraction is only valid once and before \"/\".</string>
    <string name="err_slash">in fraction is only valid once.</string>
    <string name="err_twoPoints">– the radix point – is only valid once.</string>
    <string name="err_twoReps">– the repetition mark – is only valid once.</string>
    <string name="err_twoDegs">– the degrees symbol – is only valid once.</string>
    <string name="err_twoMins">– the minutes symbol – is only valid once and after any degrees symbol.</string>
    <string name="err_baseTokenOrMinus">is only valid at start of number.</string>
    <string name="err_ellipsis">denotes a number that’s been cut off.</string>
    <string name="err_infinity">[Those having problems with infinities] aren’t nearly appreciative enough of projective geometry. (Grant Sanderson)</string>
    <string name="err_undefined">Does your input have Buddha-nature?</string>
    <string name="err_keraia">– the keraia – is only valid at the end of a Greek numeral.</string>
    <string name="err_noBalancedDigit">has no defined value in balanced systems.</string>
    <string name="err_fraction">is only valid at end of number.</string>
    <string name="err_onlyGreek">is only valid in Greek numerals.</string>
    <string name="err_onlyRoman">is only valid in Roman numerals.</string>
    <string name="err_noGreek">is neither a valid Greek nor an Arabic numeral.</string>
    <string name="err_noRoman">is neither a valid Roman nor an Arabic numeral.</string>
    <string name="err_irrational">isn’t rational.\nTap ⛶ to show it in all formats.</string>
    <string name="err_notInHistory">denotes a history entry that doesn’t exist.</string>
    <string name="err_generic">isn’t a valid character.</string>
    <string name="err_unknown">caused an unknown error.</string>
    <string name="err_load">error loading number</string>

    <string name="menu_formats">All formats</string>
    <string name="phi_formats_title">All formats of \"%s\"</string>
    <string name="menu_history">History</string>
    <string name="menu_interval">Play interval</string>
    <string name="menu_interval_list">Musical intervals</string>
    <string name="menu_undefined">What is this?</string>
    <string name="menu_settings">Settings</string>
    <string name="menu_help">Help</string>
    <string name="menu_cheatSheet">Cheat sheet</string>
    <string name="menu_whatsNew">What’s new</string>
    <string name="menu_about">About &amp; Licenses</string>

    <string name="interval">Interval</string>
    <string name="interval_keep">tap wave to keep open</string>
    <string name="interval_swipe">swipe wave to shift phase</string>
    <string name="interval_noWave">Wave frequency is too high for this screen’s resolution.</string>
    <string name="octaves">%d octaves</string>
    <string name="between_intervals">between %1$s and %2$s</string>
    <string name="interval_grammar_nom" />
    <string name="interval_grammar_between" />
    <string name="no_interval">Number must be in the range\n%1$s…%2$s</string>

    <!-- Lists / Dialogs -->
    <string name="menu_dots" translatable="false">⋮</string>
    <string name="formats_hint">Show all formats</string>
    <string name="expand_hint">Expand / collapse</string>
    <string name="item_header" translatable="false">%s =</string>
    <string name="egyptian_method">Egyptian fraction: %s</string>
    <string name="egyptian_phinary">Phinary remainder method</string>
    <string name="select_all">Select all</string>
    <string name="clear_selection">Clear selection</string>
    <string name="copy_my">Copy</string>
    <string name="clipboard_all_ok">Copied all %d entries to clipboard</string>
    <string name="share">Share</string>
    <string name="share_all">Share all %d entries with</string>
    <string name="delete">Delete</string>
    <plurals name="deleted">
        <item quantity="one">Deleted entry</item>
        <item quantity="other">Deleted %d entries</item>
    </plurals>
    <string name="clear_history">Clear history</string>
    <string name="deleted_all">Deleted all %d entries</string>
    <string name="undo">Undo</string>
    <string name="cancel">Cancel</string>
    <string name="close">Close</string>
    <string name="default_output">default</string>
    <string name="dissect_output">dissect</string>
    <string name="pretty_output">pretty</string>
    <string name="compatible_output">compatible</string>

    <string name="count_denominators">Count denominators</string>
    <string name="count_digits">Count digits</string>
    <string name="count_denominators_title">Denominator count</string>
    <string name="count_digits_title">Digit count</string>
    <string name="counting">🕰 Counting…</string>
    <plurals name="denominators">
        <item quantity="one">%s denominator</item>
        <item quantity="other">%s denominators</item>
    </plurals>
    <plurals name="denom_digit_list">
        <item quantity="one">%s in denominator</item>
        <item quantity="other">%s in denominators</item>
    </plurals>
    <plurals name="digits">
        <item quantity="one">%s digit</item>
        <item quantity="other">%s digits</item>
    </plurals>
    <string name="complement_digits">any number of digits</string>
    <string name="digits_deg">degrees:</string>
    <string name="digits_min">minutes:</string>
    <string name="digits_sec">seconds:</string>
    <string name="digits_all">%s</string>
    <string name="digits_int">%s in integer part</string>
    <string name="digits_int_phi">%s in phinteger part</string>
    <string name="digits_frac">%s in fractional part</string>
    <string name="digits_frac_phi">%s in phractional part</string>
    <string name="digits_pre">%s in non-repeating fractional part</string>
    <string name="digits_pre_phi">%s in non-repeating phractional part</string>
    <string name="digits_rep">%s in repeating part</string>
    <string name="digits_numer">%s in numerator</string>
    <string name="digits_denom">%s in denominator</string>

    <!-- Settings -->
    <string name="out_header">Output</string>
    <string name="digits_title">Maximum digits in fractional part</string>
    <string name="group_title">Group digits</string>
    <string name="group_hint">by 4 in bases φ, ±2, 4, 8, 16, etc., else by 3</string>
    <string name="lowercase_title">Lower case digits</string>
    <string name="natural_title">Show natural numbers as</string>
    <string name="apostrophus_title">Roman apostrophus</string>
    <string name="egyptian_title">Egyptian fractions</string>

    <string name="feedback_header">Feedback</string>
    <string name="range_title">Show digit range on base change</string>
    <string name="autoScroll_title">Auto-scroll down output area</string>
    <string name="autoScroll_hint">on input change</string>
    <string name="wrongDigits_title">Warn on non-standard input</string>
    <string name="wrongDigits_hint">Turns weird but still interpretable input orange (e.g.&#xA0;digit out of range)</string>

    <string name="keyboard_header">Keyboard</string>
    <string name="keyboard_title">Keyboard layout</string>
    <string name="spaceComposes_title">Space key composes digit</string>
    <string name="spaceComposes_hint">from its decimal representation</string>
    <string name="tokens_title">Customize base tokens</string>
    <string name="tokens_reset">Reset all tokens</string>
    <string name="tokens_reset_ok">Tokens reset</string>
    <string name="tokens_dollar">$ (and also €, £, ¥)</string>
    <string name="base_title">Base</string>
    <string name="base_dialogTitle">Base (±2…%d)</string>
    <string name="numSystem_title">Numeral system</string>

    <string name="appearance_header">Appearance</string>
    <string name="buttons_title">Show base buttons</string>
    <string name="moreSpace_title">More space above base buttons</string>
    <string name="size_title">Text size</string>
    <string name="font_title">Font type</string>
    <string name="theme_title">Theme</string>

    <!-- Help -->
    <string name="share_app">Convert rational numbers between different bases and different representations:
        \n\nhttps://play.google.com/store/apps/details?id=org.tessoft.qonvert\n\nor\n\nhttps://f-droid.org/packages/org.tessoft.qonvert/</string>
    <string name="title_about">About Qonvert v%1$s &lt;small&gt;(♯%2$d)&lt;/small&gt;</string>

    <!-- CSS -->
    <string name="css" translatable="false"><![CDATA[
<style>
    body {padding-top: 1.5em; padding-bottom: 2em}
    h1, h2, h3, h4 {font-family: serif}
    h1 {font-size: 140%}
    h2 {font-size: 125%; border-radius: 0.2em; background: rgb(224, 224, 224)}
    h3 {font-size: 115%}
    h1 small {color: silver}
    ul {padding-left: 1.5em}
    a {color: rgb(224, 83, 0)} /* orange_light */
    code {font-family: inherit; border: 1px solid rgb(224, 224, 224); border-bottom-color: rgb(224, 83, 0); border-radius: 2px}
    .roman-frame {border: 1px solid black; border-bottom: none}
</style>
    ]]></string>
    <string name="css_dark" translatable="false"><![CDATA[
<style>
    body {color: white; background: rgb(18, 18, 18)}
    h2 {background: rgb(64, 64, 64)}
    code {border-color: rgb(64, 64, 64); border-bottom-color: rgb(168, 62, 0)} /* orange_dark */
    .roman-frame {border-color: white}
</style>
    ]]></string>

    <!-- Help -->
    <string name="help"><![CDATA[
<h2>Overview</h2>
<p>This app lets you convert numbers from the set ℚ of rational numbers between different bases (including nonstandard numeral systems)
and between different representations such as positional notation and fractions (including improper, mixed, continued and Egyptian ones).
The numbers can have basically arbitrary size and precision.</p>
<p>Long-tap a key on the keyboard to access the second character. You can vanish the keyboard by tapping ◀ on the navigation bar or by swiping down;
tap the input line for it to re-emerge.</p>
<p>Short-tap a result to copy it to the input line, and long-tap to copy it to the clipboard.</p>

<h2>Choosing input and output systems</h2>
<p>Choose an input <a href="https://en.wikipedia.org/wiki/Radix">base</a> via the slider or the shortcut buttons in the lower part of the screen,
and an output base via the corresponding controls in the upper part. You can choose the displayed shortcut buttons, including ones to switch
to <a href="https://en.wikipedia.org/wiki/Negative_base">negative bases</a>, in the settings under “Show base buttons”.
Long-tapping a button or moving a slider all the way to the right brings up a dialog for choosing a base between ±2 and ±280 or φ (the golden ratio).</p>
<p>The coloured buttons on the right let you switch between various kinds of numeral systems (standard, balanced, bijective, Greek, and Roman),
on which more below. Not every option can be combined with every base; for invalid combinations, the buttons are greyed and the app uses
the standard numeral system.</p>
<p>You can also prefix a number with one of five tokens (<code>@ %23 $ % &</code>) to set its base and numeral system on the fly. The meaning of these tokens
can be changed in the settings; by default, they represent bases 2, 8, 10, 12 and 16 in the standard system, respectively.</p>

<h2>Standard positional notation</h2>
<p>If you choose to convert from standard DECimal (base 10) to standard HEXadecimal (base 16), an input of (say) <code>345</code> is interpreted as
<strong>3</strong>×10<sup>2</sup>+<strong>4</strong>×10<sup>1</sup>+<strong>5</strong>×10<sup>0</sup> and converted to
<strong>1</strong>×16<sup>2</sup>+<strong>5</strong>×16<sup>1</sup>+<strong>9</strong>×16<sup>0</sup>, which is displayed as 159.</p>
<p>Digits from <code>0</code> to <code>9</code> work as expected. Those with values higher than 9 are represented by letters and other characters,
from <code>A</code>&nbsp;=&nbsp;10 to <code>Z</code>&nbsp;=&nbsp;35, <code>Þ</code>&nbsp;=&nbsp;36, <code>Ч</code>&nbsp;=&nbsp;37, <code>ʔ</code>&nbsp;=&nbsp;38,
<code>ʖ</code>&nbsp;=&nbsp;39, etc. (Swipe left to see the Cheat sheet for further digits and how to type them.)</p>
<p>The digits are case insensitive; and spaces are ignored.</p>

<h3>Non-integers</h3>
<p>Digits after a radix point <code>.</code> are of course interpreted as the fractional part of the number: <code>1.A6</code> in DOZenal (base 12) is
<strong>1</strong>×12<sup>0</sup>+<strong>10</strong>×12<sup>−1</sup>+<strong>6</strong>×12<sup>−2</sup>&nbsp;=&nbsp;1.875 decimal. If there is a
<a href="https://en.wikipedia.org/wiki/Repeating_decimal">repeating part</a>, mark its start with a dot above <code>˙</code>
(or with a colon <code>:</code> if you are using the Android keyboard instead of Qonvert’s):
For example, <code>0.1˙486</code> means 0.1486486486…, and <code>21˙3.4</code> means 213.43434….</p>
<p>The result of your conversion has always either a finite number of digits after the radix point or a repeating part. Sometimes, though, the representation
can be very long. To keep the app from freezing, the search for an exact representation stops after 300 digits by default. You can change this value in
the settings.</p>
<p>If your screen is too small to show all the output formats (positional, fraction, mixed, continued and Egyptian fractions),
you can swipe the output area up and down.</p>

<h2>Fractions</h2>
<p>Type a numerator and a denominator separated with a slash <code>/</code>, as in <code>6/8</code> or <code>1.5/2</code>. Fractions are reduced or expanded
as necessary, so both of these inputs will result in 3/4.</p>
<p>For mixed fractions, separate integer and fractional part with an underscore <code>_</code>: for example <code>1_9/8</code>, or something more complicated
such as <code>1.˙3&nbsp;_&nbsp;1/3</code>. Fractions with an absolute value over 1 will be shown both as improper (17/8 or 5/3 in our examples)
and as mixed fractions (2_1/8 or 1_2/3).</p>
<p>Base tokens apply to the individual parts of fractions, so you can type <code>$10_@10/&13</code> or <code>%251B/14</code> (where <code>14</code> is
interpreted according to the currently set base and numeral system). The same is true of the other types of compound numbers described below.</p>

<h3>Continued fractions</h3>
<p><a href="https://en.wikipedia.org/wiki/Continued_fraction">Continued fractions</a> start with an integer part, followed by a semicolon <code>;</code> and
a comma-separated list of denominators. Square brackets are used for output but are optional for input.</p>
<p><code>2;3,4</code>, for example, means <strong>2</strong>&nbsp;+&nbsp;1/(<strong>3</strong>&nbsp;+&nbsp;1/<strong>4</strong>), which evaluates to
2.˙307692, 30/13, and 2_4/13.</p>
<p>Input of non-integer numbers, including fractions, is okay: <code>1.5;&nbsp;2/3,&nbsp;1_1/5</code> is simplified to [2;&nbsp;6], which only contains
integers. All continued fractions are displayed with positive denominators, so <code>-3;-1,-1,-18</code> becomes [−4;&nbsp;2,&nbsp;18].</p>

<h3>Egyptian fractions</h3>
<p><a href="https://en.wikipedia.org/wiki/Egyptian_fraction">Egyptian fractions</a> are sums of unit fractions. Input works as with continued fractions,
only with curly braces: <code>{2;3,4</code> is interpreted as <strong>2</strong>&nbsp;+&nbsp;1/<strong>3</strong>&nbsp;+&nbsp;1/<strong>4</strong>,
evaluating to 2.58˙3, 31/12, 2_7/12, and [2;&nbsp;1,&nbsp;1,&nbsp;2,&nbsp;2].</p>
<p>For every rational number there are infinitely many Egyptian fraction representations. In the settings you can choose between various calculation methods
for the main screen. The results of the other methods show up when you tap ⛶ in the title bar – they are identical for some numbers,
while for others they differ dramatically.</p>
<p>Calculation of an Egyptian fraction may be cut off if it gets too long; the limit depends on the “Maximum digits in fractional part” in the settings.</p>

<h2>Degrees, minutes and seconds</h2>
<p>For example, the input <code>1° 23\' 45\"</code> equals 1+23/60+45/3600&nbsp;= 67/48&nbsp;= 1.3958˙3 in standard decimal. The three parts of this format
have to be in that order, but need not all be present; and they can be non-integers as well: thus, <code>1° 45.6\"</code> and <code>1/2\'</code> (half a minute)
are valid inputs.</p>
<p>The DMS switch at the top right determines whether numbers are output in normal positional notation or as degrees, minutes and seconds.</p>

<h2>Negative numbers</h2>
<p>You can type negative numbers either in ordinary notation with a leading minus <code>-</code>, or in
<a href="https://en.wikipedia.org/wiki/Method_of_complements">complement notation</a> with two leading points <code>..</code>: these points basically mean
“the highest digit in this base repeated all the way to the left”. Complement notation works with positive bases in the standard system.
It is known from computing, where −1 is represented as hexadecimal FFFFFFFF, −2 as FFFFFFFE, and so on (with as many F’s as there is space).
So, typing <code>..FFD</code> or simply <code>..D</code> in hexadecimal, or <code>..997</code> or simply <code>..7</code> in decimal, all mean −3.</p>
<p>Output of negative numbers is either in ordinary or complement notation, depending on the complement switch at the top right.</p>

<h2>Non-standard numeral systems</h2>
<h3>Balanced</h3>
<p>Balanced numeral systems (the best-known being <a href="https://en.wikipedia.org/wiki/Balanced_ternary">balanced ternary</a>, i.e. base 3) have digits with
<em>negative</em> values, notably <code>Z</code>&nbsp;=&nbsp;−1, <code>Y</code>&nbsp;=&nbsp;−2, down to <code>J</code>&nbsp;=&nbsp;−17 and below.
(Swipe left to see the Cheat sheet for further digits as defined for balanced systems.)
They work with odd bases up to 259. Thus, in balanced ternary, <code>10Z</code> means
<strong>1</strong>×3<sup>2</sup>+<strong>0</strong>×3<sup>1</sup><strong>−1</strong>×3<sup>0</sup>&nbsp;=&nbsp;8. Negative numbers don’t need a minus sign
in this notation: <code>Z01</code> means <strong>−1</strong>×3<sup>2</sup>+<strong>0</strong>×3<sup>1</sup>+<strong>1</strong>×3<sup>0</sup>&nbsp;=&nbsp;−8</p>

<h3>Bijective</h3>
<p>In a <a href="https://en.wikipedia.org/wiki/Bijective_numeration">bijective system</a> of a base b, the digits go from 1 to b instead of 0 to b−1.
There are two variants: “bijective 1” uses the digits <code>1</code> to <code>9</code> and from <code>A</code> upwards as in standard notation
and works up to base 279; “bijective A” uses <code>A</code>&nbsp;=&nbsp;1, <code>B</code>&nbsp;=&nbsp;2,&nbsp;… <code>Z</code>&nbsp;=&nbsp;26,
<code>Þ</code>&nbsp;=&nbsp;27, etc., and only works up to base 270. So, the first natural numbers in decimal bijective 1 are
1, 2, 3, 4, 5, 6, 7, 8, 9, A&nbsp;(=10), 11, 12,&nbsp;…, 19, 1A, 21,&nbsp;…, and the first natural numbers in hexavigesimal (base 26) bijective A are
A, B, C, D,&nbsp;…, X, Y, Z, AA, AB, AC,&nbsp;…. Zero is technically an empty string; it is denoted with “/”.</p>
<p>Numbers with a radix point don’t work well with bijective systems, so non-integers are only displayed as fractions.</p>

<h3>Greek numerals</h3>
<p><a href="https://en.wikipedia.org/wiki/Greek_numerals">Greek (Milesian) numerals</a> are always base 10. The Greek letters <code>Α Β Γ Δ Ε Ϛ Ζ Η Θ</code>
have values 1 to 9, <code>Ι Κ Λ Μ Ν Ξ Ο Π Ϟ</code> are 10 to 90, <code>Ρ Σ Τ Υ Φ Χ Ψ Ω Ϡ</code> are 100 to 900, and
<code>͵Α ͵Β ͵Γ</code> etc. are 1000 to 9000. They are normally ordered from largest to smallest: 1231 is <code>͵ΑΣΛΑ</code>. In the output section
they are followed by a keraia (ʹ) to better distinguish them from Roman numerals (see below), but the keraia is optional for input.</p>
<p>Myriads (10&nbsp;000s) are marked with a dot, following Diophantus: <code>Θ.ΦΛ</code> means 9 myriads 530 = 90530. Repeated dots are used for still
larger numbers (<code>Π&nbsp;.&nbsp;.&nbsp;ʹ</code> for 80&nbsp;0000&nbsp;0000), following nobody at all.</p>
<p><code>○</code> means zero. Non-integers are only displayed as fractions.</p>
<p>When Greek input is set, Arabic (i.e. standard decimal) input is also accepted so you need less switching between input systems. Furthermore, Greek numerals
are always accepted regardless of input system as they – consisting of Greek letters – can’t be confused with anything else.</p>
<p>When an output system other than Greek is selected, positive integers are <em>also</em> displayed as Greek numerals in the second output line.</p>

<h3>Roman numerals</h3>
<p><a href="https://en.wikipedia.org/wiki/Roman_numerals">Roman numerals</a> are also base 10. They can contain the letters <code>I V X L C D M</code>.
Symbols for larger values are <code>ↁ</code>&nbsp;=&nbsp;5000, <code>ↂ</code>&nbsp;=&nbsp;10&nbsp;000, <code>ↇ</code>&nbsp;=&nbsp;50&nbsp;000, and
<code>ↈ</code>&nbsp;=&nbsp;100&nbsp;000.
(If you are using the Android keyboard instead of Qonvert’s, you can compose them as <code>I)) ((I)) I))) (((I)))</code>.)</p>
<p>One traditional way for expressing <em>still</em> larger numbers is to enclose them in a frame to multiply with 100&nbsp;000, or in nested frames
for even higher powers. Qonvert uses pipes <code>|</code> for this purpose:
<code style=\"white-space: nowrap\">|VI|((I))MM</code>&nbsp;=&nbsp;<span class="roman-frame">VI</span>ↂMM&nbsp;=&nbsp;6&nbsp;12000.
You can omit the leading pipes, and replace pipes with exclamation marks:
<code style=\"white-space: nowrap\">||V|M|II</code>&nbsp;=&nbsp;<code style=\"white-space: nowrap\">V!M!II</code>&nbsp;=&nbsp;5&nbsp;01000&nbsp;00002.
(The Romans certainly wouldn’t have recognised this notation, but there doesn’t seem to be any valid way of expressing huge numbers in Roman.)</p>
<p>The integer part may be followed by <code>S</code> (<i>semis</i>) for a half and one or more dots for a twelfth each.
<code>N</code> for <i>nulla</i> or <i>nihil</i> means zero.</p>
<p>When Roman input is set, Arabic (standard decimal) input is also accepted; and when an output system other than Roman is selected,
positive integers are <em>also</em> displayed as Roman numerals in the third output line.</p>

<h2>Special bases</h2>
<h3>Phinary</h3>
<p><a href="https://en.wikipedia.org/wiki/Golden_ratio_base">Phinary</a>, base φ&nbsp;=&nbsp;(1+√5̄)/2, is available in the standard and balanced
numeral systems, the difference being that the digit <code>Z</code>&nbsp;=&nbsp;−1 can be used in the latter. On the sliders, phinary is located on the
leftmost tick.</p>
<p>Although the golden ratio φ is irrational, integers expressed in base φ always have finite representations (albeit typically with digits after the
radix point), and non-integer rational numbers have repeating representations. However, the reverse is not true: if you type an arbitrary sequence of digits,
you will likely get an error message along the lines of “101ᵩ (5/2+√5/2) isn’t rational”.</p>
<p>The output will only contain the digits 0 and 1 (Z for negative numbers in balanced), and never two or more 1’s (or Z’s) in a row. The parts of fractions,
including continued and Egyptian ones, aren’t necessarily integers, but they are always numbers without a radix point. (Let’s coin a cheesy term: they are
always <i>phintegers</i>.) Egyptian fractions can be calculated with the greedy or the phinary remainder method. Phinary output currently does not support
fractions in DMS format.</p>

<h3>Negative bases</h3>
<p><a href="https://en.wikipedia.org/wiki/Negative_base">Negative bases</a> work together with all standard and non-standard systems – including all
non-integer notations – except for Greek and Roman numerals and for base φ.
Since odd powers of negative numbers are negative, and even powers are positive, <code>345</code> in standard nega-decimal is interpreted as
<strong>3</strong>×10<sup>2</sup><strong>−4</strong>×10<sup>1</sup>+<strong>5</strong>×10<sup>0</sup>, which equals 265, and <code>3450</code> as
<strong>−3</strong>×10<sup>3</sup>+<strong>4</strong>×10<sup>2</sup><strong>−5</strong>×10<sup>1</sup>, which equals −2650:
thus, we don’t need a minus sign in negative bases.</p>
<p>Note that “bijective” systems with negative bases aren’t actually bijective: for example, in nega-decimal, you can always add or remove a leading
<strong>1A</strong> without changing a number’s value.</p>

<h3>Complex bases</h3>
<p>Although Qonvert can’t handle <a href="https://en.wikipedia.org/wiki/Complex-base_system">complex bases</a>, there are some hacks:</p>
<ul>
 <li>A real number in base 2<i>i</i> is just this number in base −4 with zeroes inserted at every other place:
 −13.5₁₀&nbsp;=&nbsp;1303.2₋₄&nbsp;=&nbsp;1030003.02₂<i>ᵢ</i>.</li>
 <li>This also works for higher imaginary bases, always using the negative base that is their square: base −9 for base 3<i>i</i> etc.</li>
 <li>You can work out base <i>i</i>−1 representations by converting to base −4 and then doing the following digit substitutions:<br>
 0&nbsp;→&nbsp;0000, 1&nbsp;→&nbsp;0001, 2&nbsp;→&nbsp;1100, 3&nbsp;→&nbsp;1101</li>
</ul>

<h2>Unicode characters</h2>
<p>Inputs that are integers from hexadecimal <code>20</code> to <code>10FFFF</code> (decimal <code>32</code> to <code>1114111</code>) are not only
converted to their representation in the output base and to Greek and Roman numerals, but also to the corresponding
<a href="https://en.wikipedia.org/wiki/Unicode">Unicode</a> character. (If the output area is too cluttered for your taste, you can hide any or all of these
in the settings.)</p>
<p>Conversely, type double quotes <code>\"</code> followed by any character to find its Unicode encoding. This only works for single characters,
not composed ones such as certain letter-<a href="https://en.wikipedia.org/wiki/Diacritic">diacritic</a> combinations, people with skin tones, or flags.</p>
<p>The Web has excellent sources to find Unicode characters by name; but if you want to know the Unicode representation of the tortoise in balanced undecimal,
Qonvert is your <strong>only</strong> source. (The answer is 1YX&nbsp;215.)</p>
<p>And if anybody asks “why”, the answer is “because”.</p>
    ]]></string>

    <!-- Cheat sheet -->
    <string name="cheatSheet"><![CDATA[
<h2>Gestures</h2>
<ul>
 <li><strong>Output area</strong>: short-tap copies to input line and switches input and output bases, long-tap copies to clipboard.</li>
 <li><strong>Base buttons</strong>: left/right swipe decreases/increases base by 1, long-tap brings up dialog for choosing a base.</li>
 <li>“<strong>in: base</strong>” and “<strong>out: base</strong>”: tap displays digit range for currently selected base and number system.</li>
 <li><strong>Number system buttons</strong>: long-tap toggles between standard and balanced.</li>
 <li><strong>Base sliders</strong>: sliding all the way to the right brings up dialog for choosing a base.</li>
 <li><strong>Clear button (🗑)</strong>: long-tap sets input and output to standard decimal.</li>
 <li><strong>Qonvert keyboard</strong>: long-tap accesses the second character on a key; ◀ or swiping down vanishes it,
 and tapping the input line lets it re-emerge.</li>
 <li><strong>List entries</strong> in history etc.: short-tap copies to input line, long-tap toggles selection. In selection mode, long-tap selects a
 range.</li>
</ul>

<h2>Input syntax</h2>
<h3>Digits</h3>
<ul>
 <li><code>0</code>…<code>9</code></li>
 <li><code>A</code>…<code>Z</code> and <code>Þ Ч ʔ ʖ</code> : 10…39; bijective A: 1…30</li>
 <li><code>Ą</code>…<code>Ẓ</code> and <code>Ꝧ Ҷ ? ¿</code> : 40…69; bij.A: 31…60</li>
 <li><code>Ⱥ</code>…<code>Ƶ</code> and <code>Ꝥ Ҹ ʡ ƾ</code> : 70…99; bij.A: 61…90</li>
 <li><code>Ⓐ</code>…<code>Ⓩ</code> and <code>㊄ ㊃ ㊈ ㊆</code> : 100…129; bij.A: 91…120</li>
 <li><code>⒜</code>…<code>⒵</code> and <code>㈤ ㈣ ㈨ ㈦</code> : 130…159; bij.A: 121…150</li>
 <li><code>卂</code>…<code>乙</code> and <code>五 四 九 七</code> : 160…189; bij.A: 151…180</li>
 <li><code>ꋬ</code>…<code>ꁴ</code> and <code>ꃩ ꐳ ꃀ ꐧ</code> : 190…219; bij.A: 181…210</li>
 <li><code>ᗩ</code>…<code>ᔐ</code> and <code>ᘶ ᖻ ᕈ ᘪ</code> : 220…249; bij.A: 211…240</li>
 <li><code>ᚣ</code>…<code>ᛋ</code> and <code>ᚦ ᚴ ᚯ ᚬ</code> : 250…279; bij.A: 241…270</li>
</ul>
<p>The latter turn up in a pop-up when you tap one of the letters A–ʖ, depending on the current input system.</p>
<p>If “Settings&nbsp;> Keyboard&nbsp;> Space key composes digit” is switched on, you can also type a digit’s decimal value and then tap Space ␣.
(On some Android keyboards, you may need two spaces.)</p>

<h4>In balanced number systems</h4>
<ul>
 <li><code>ᚱ</code>…<code>ᛋ</code> and <code>ᚦ ᚴ ᚯ ᚬ</code> : −129…−117</li>
 <li><code>ꋬ</code>…<code>ꁴ</code> and <code>ꃩ ꐳ ꃀ ꐧ</code> : −116…−87</li>
 <li><code>⒜</code>…<code>⒵</code> and <code>㈤ ㈣ ㈨ ㈦</code> : −86…−57</li>
 <li><code>Ⱥ</code>…<code>Ƶ</code> and <code>Ꝥ Ҹ ʡ ƾ</code> : −56…−27</li>
 <li><code>Ą</code>…<code>Į</code> : −26…−18</li>
 <li><code>J</code>…<code>Z</code> : −17…−1</li>
 <li><code>0</code>…<code>9</code></li>
 <li><code>A</code>…<code>I</code> : 10…18</li>
 <li><code>Ʝ</code>…<code>Ẓ</code> and <code>Ꝧ Ҷ ? ¿</code> : 19…39</li>
 <li><code>Ⓐ</code>…<code>Ⓩ</code> and <code>㊄ ㊃ ㊈ ㊆</code> : 40…69</li>
 <li><code>卂</code>…<code>乙</code> and <code>五 四 九 七</code> : 70…99</li>
 <li><code>ᗩ</code>…<code>ᔐ</code> and <code>ᘶ ᖻ ᕈ ᘪ</code> : 100…129</li>
</ul>

<h3>Negative numbers</h3>
<ul>
 <li><code>-</code> : minus sign</li>
 <li><code>..</code> : complement notation</li>
</ul>

<h3>Non-integers</h3>
<ul>
 <li><code>.</code> : radix point</li>
 <li><code>˙</code> or <code>:</code> : start of repeating part</li>
 <li><code>/</code> : fraction slash</li>
 <li><code>_</code> : separates integer and fraction in a mixed fraction (e.g. <code>2_1/8</code>)</li>
 <li><code>° \' \"</code> : degrees, minutes and seconds</li>
 <li><code>[ ; , , ]</code> : continued fraction (the brackets are optional)</li>
 <li><code>{ ; , , }</code> : Egyptian fraction</li>
</ul>

<h3>Greek numerals</h3>
<ul>
 <li><code>Α Β Γ Δ Ε Ϛ Ζ Η Θ</code> : 1…9</li>
 <li><code>Ι Κ Λ Μ Ν Ξ Ο Π Ϟ</code> : 10…90</li>
 <li><code>Ρ Σ Τ Υ Φ Χ Ψ Ω Ϡ</code> : 100…900</li>
 <li><code>͵</code> : multiplies following letter by 1000</li>
 <li><code>.</code> : multiplies preceding part by 10000 (a myriad)</li>
 <li><code>○</code> : zero</li>
</ul>

<h3>Roman numerals</h3>
<ul>
 <li><code>I V X L C D M</code> or <code>ↀ</code> : 1…1000</li>
 <li><code>ↁ ↂ ↇ ↈ</code> or <code>I)) ((I)) I))) (((I)))</code> : 5000, 10&nbsp;000, 50&nbsp;000, 100&nbsp;000</li>
 <li><code>|</code> or <code>!</code> : multiplies by 100&nbsp;000</li>
 <li><code>. : S</code> (and up to 5 dots): <i>uncia</i>&nbsp;=&nbsp;twelfth, <i>sextans</i>&nbsp;=&nbsp;sixth, <i>semis</i>&nbsp;=&nbsp;half</li>
 <li><code>N</code> : <i>nulla/nihil</i>&nbsp;=&nbsp;zero</li>
</ul>

<h3>Base tokens</h3>
<p>… can be customized in the settings. Put them in front of a number. The default values are:</p>
<ul>
 <li><code>@</code> : standard binary (2)</li>
 <li><code>%23</code> : standard octal (8)</li>
 <li><code>$</code> (or <code>€</code>, <code>£</code>, <code>¥</code>): standard decimal (10)</li>
 <li><code>%</code> : standard dozenal (12)</li>
 <li><code>&</code> : standard hexadecimal (16)</li>
</ul>

<h3>Unicode characters</h3>
<ul>
 <li><code>\"💃</code> : Dancer</li>
</ul>
    ]]></string>

    <!-- What’s new -->
    <string name="whatsNew"><![CDATA[
<h2>Version 1.9.0 <small></small></h2>
<p><strong>Calculations are now done in the background</strong> to improve the app’s responsiveness when calculating very long representations.</p>
<p><strong>Base phi</strong>: Qonvert can calculate Egyptian fractions for phinary with the greedy and the phinary remainder methods. And when an
“irrational” error turns up, you can tap ⛶ to show the offending input in standardized form in all different formats.</p>
<p>You can <strong>change base and numeral system</strong> directly on the <strong>All formats</strong> and <strong>Musical intervals</strong> screens.</p>
<p>And as always: tweaks and fixes.</p>

<h2>Version 1.8.0 <small>– 3 Apr 2023</small></h2>
<p><strong>Bases up to ±280</strong> are supported, and balanced bases up to <strong>±259</strong>, using increasingly exotic digits.
<strong>Phinary balanced</strong> is now also supported, for which you can use <code>Z</code>&nbsp;=&nbsp;−1 as an input digit.</p>
<p>The settings have been slightly rearranged. They contain a new section “Keyboard” with an option “<strong>Space key composes digit</strong>”;
if it’s switched on, you can compose a digit by typing its decimal value and then tapping Space (␣). In the “Appearance” section, you can choose between
serif, sans-serif, and monospace <strong>fonts</strong> for input and output areas and for the keyboard.</p>
<p>New <strong>musical intervals</strong>: Pythagorean wolf fourth and fifth as examples of dissonant intervals, as well as septimal (7-limit) tuning.
Interval sizes are also shown in cents.</p>
<p>The help text now has a chapter on complex bases.</p>
<p>Minor improvements and a bugfix: A crash on inputting numbers with high digits in large negative bases has been fixed.</p>

<h2>Version 1.7.1 <small>– 7 Jan 2023</small></h2>
<p>There are three <strong>additional keyboard layouts</strong>: with the digits starting on the left edge, for tablets (with 12 columns even in portrait mode),
and a combination of the two. You can choose in the settings, in the “Appearance” section. The keyboard pop-ups now show the <strong>digits’ values</strong>.</p>
<p>The list screens (All formats, History, Musical intervals) have got a new display option, “<strong>dissect</strong>”, which shows digits with values
outside the range 0…9 as decimal numbers (such as Z5Ţ₆₀ as 35&nbsp;5&nbsp;59₆₀).</p>
<p>A crash on input of a character with a Unicode code point &gt;&nbsp;FFFF₁₆ has been fixed, as well as some minor issues.</p>

<h2>Version 1.7.0 <small>– 25 Dec 2022</small></h2>
<p><strong>Phinary</strong>, the golden ratio base, is now supported. On the sliders, it is located on the leftmost tick. Also, <strong>bases up to
±100</strong> are supported.</p>
<p>Qonvert can now <strong>count digits</strong> – as well as <strong>denominators</strong> of continued and Egyptian fractions – of the list screens’
individual entries. Tap the ⋮ on the right edge to bring up the new menu items.</p>
<p>“½” on Qonvert’s keyboard (long-tap the radix point) brings up a pop-up with <strong>fraction characters</strong>.</p>
<p>Setting a negative base <i>italicises</i> the base buttons for added clarity.</p>
<p>Speed has been improved (again), especially for repeating digits and for large bases. And needless to say: bugfixes.</p>

<h2>Version 1.6.0 <small>– 5 Nov 2022</small></h2>
<p><strong>Bases up to 70</strong> are now supported, including negative ones. On the settings screen, you can activate new base buttons for
<strong>sexagesimal</strong> (base 60).</p>
<p>The <strong>base tokens</strong> (<code>@ %23 $ % &</code>) can be customized in the settings to represent any valid combination of base and numeral
system.</p>
<p><strong>Degrees, minutes and seconds</strong>: non-integer seconds are also shown as fractions.</p>
<p>I removed support for complement notation in bijective systems; I have to admit that this never made any sense.</p>
<p>Many fixes and improvements – for example, you can now delete history entries by swiping them away.</p>

<h2>Version 1.5.0 <small>– 9 Oct 2022</small></h2>
<p><strong>Negative bases</strong> are now supported. Long-tap one of the base buttons to bring up a dialog for choosing any base, including negative ones.
There are also buttons to switch between positive and negative bases; you can show or hide them in the settings under “Show base buttons”.</p>
<p><strong>Degrees, minutes and seconds</strong> (<strong>DMS</strong>, such as <code>1° 45\' 10\"</code>) are supported.</p>
<p>⚠️ The <strong>repetition sign has been changed</strong> to a dot above <code>˙</code> (or you can use a colon <code>:</code>) to make way for
the minutes sign. The keyboard layout has been adapted slightly. Sorry for the inconvenience!</p>
<p><strong>Unicode character names</strong> are shown on the all formats screen in “pretty” format (for Android version 4.4 KitKat and higher).</p>
<p><strong>Settings</strong>: Auto-scrolling of the output area when the output doesn’t fit can now be switched off. Text size now also affects the
DMS- and complement-switches and the “in: base” and “out: base” texts. And the height of the switches area can be increased.</p>

<h2>Version 1.4.1 <small>– 17 Jul 2022</small></h2>
<p>Improvements and bugfixes to the <strong>waveform</strong> display of musical intervals: the phase shift can now be changed by swiping.</p>

<h2>Version 1.4.0 <small>– 16 May 2022</small></h2>
<p><strong>Greek (Milesian) numerals</strong> are now fully supported.</p>
<p>Playing a musical interval now also shows a <strong>waveform</strong> of this interval. (These are examples; for different phase shifts
waveforms of the same interval look different.)</p>
<p>On the list screens you can now <strong>select a whole range</strong> of entries at once by long-tapping the one at the start of the range and then
long-tapping the one at the end.</p>
<p>… and bugfixes, as usual.</p>

<h2>Version 1.3.0 <small>– 2 Apr 2022</small></h2>
<p>Qonvert has a <strong>new keyboard</strong>! (for Android version 5 Lollipop and higher) – It adapts to the current input system and to your phone’s
orientation. To access the second character on a key, long-tap it. You can vanish the keyboard by tapping ◀ on the navigation bar or by swiping down;
tap the input line for it to re-emerge.<br>
If you want the standard Android keyboard back, you can choose it in the settings.</p>
<p>Tap ♫ in the title bar to play a musical interval with the given frequency ratio. As of this version, the <strong>name of the interval</strong>,
or the nearest named interval, is displayed. The menu item “Musical intervals” lists all known interval names and their values.</p>
<p>The list screens now have a third option for displaying, copying and sharing numbers: “<strong>compatible</strong>”,
which aims at maximum compatibility with other mathematics apps (at least for the less obscure number bases and systems).</p>
<p>Natural numbers are now also shown as <strong>Greek numerals</strong>. If the output area is too cluttered for your taste, you can hide them
in the settings (or you could hide the Roman numerals, or the Unicode symbols).</p>
<p>Next to Unicode symbols in the history and on the all formats screen there’s a new button opening a <strong>web link about that symbol</strong>
(on fileformat.info).</p>

<h2>Version 1.2.0 <small>– 18 Feb 2022</small></h2>
<p>There is a new screen called <strong>All formats</strong> which opens when you tap ⛶. It lets you copy and share your calculation results.
The appearance of the history is new, providing the same functionality as the all formats screen.</p>
<p>Output of <strong>Egyptian fractions</strong> is supported now. You can choose a calculation method for the main screen in the settings;
the results of the other methods are available on the all formats screen.</p>
<p>Support for <strong>German</strong> was added. Also, speed has been improved significantly.</p>

<h2>Version 1.1.0 <small>– 26 Jan 2021</small></h2>
<p>The switches for balanced numeral systems have been replaced with dropdown menus which let you choose between standard, balanced, <strong>bijective</strong>
and <strong>Roman</strong> numerals. You can still toggle between standard and balanced systems with a long tap. See the Help page for how these
new systems work.</p>
<p>On the settings screen, you can activate new base buttons for <strong>hexavigesimal</strong> (base 26).</p>
<p>Input of <strong>Egyptian fractions</strong> is supported: <code>{2;3,4</code> is interpreted as 2&nbsp;+&nbsp;1/3&nbsp;+&nbsp;1/4 = 2_7/12.</p>
<p>You can now use <strong>fraction characters</strong> such as <code>¾</code> and use them in numbers: <code>2¾</code>.</p>
<p>The main menu has a new entry “<strong>Cheat sheet</strong>” with an overview over the control gestures on the main screen, as well as the input syntax.
(Now you can swipe right to get there.)</p>
<p>Many fixes and improvements – for example, calculating digits of long repeating parts is faster now.</p>

<h2>Version 1.0.0 <small>– 20 Dec 2020</small></h2>
<p>Initial release with standard and balanced numeral systems as well as Roman output for positive integers and Unicode characters,
and playing musical intervals (by tapping ♫).</p>
    ]]></string>

    <!-- About -->
    <string name="about"><![CDATA[
<h2>Thank you for using Qonvert!</h2>
<p>This is a toy and maybe an educational tool, and it’s free. It was written by me, Anypodetos. If you have any suggestions or questions, or you want to report
a bug, or you just want to tell me whether you like this app, please <a href="https://lemizh.conlang.org/home/contact.php?about=qonvert">contact me</a>.</p>
<p>Source code:<br><a href="https://github.com/Anypodetos/qonvert">https://github.com/Anypodetos/qonvert</a></p>
<p>Standalone code for calculations in the field ℚ[√5] and with base φ:<br>
<a href="https://github.com/Anypodetos/BasePhi">https://github.com/Anypodetos/BasePhi</a></p>
<p>My Wikipedia page:<br><a href="https://en.wikipedia.org/wiki/User:Anypodetos">https://en.wikipedia.org/wiki/User:Anypodetos</a></p>
<p>My conlanging homepage:<br><a href="https://lemizh.conlang.org">https://lemizh.conlang.org</a></p>

<h2>Acknowledgments</h2>
<p>The algorithms for calculating Egyptian fractions are from <a href="https://www.ics.uci.edu/~eppstein/numth/egypt/intro.html">David Eppstein’s page</a>
and <a href="https://ami.uni-eszterhazy.hu/uploads/papers/finalpdf/AMI_42_from129to134.pdf">a paper by Gyimesi and Nyul</a>;
see there for explanations on how they work.</p>
<p>The development of this app wouldn’t have been possible without the many valiant Android programmers at
<a href="https://stackoverflow.com/">stackoverflow</a>. Special thanks to Sweeper and leonbloy!</p>

<h2>GNU General Public License</h2>
<p>Copyright 2020, 2021, 2022, 2023 Anypodetos (Michael Weber)</p>
<p>Qonvert is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p>
<p>Qonvert is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>
<p>You should have received a copy of the GNU General Public License along with Qonvert.
If not, see <a href="https://www.gnu.org/licenses/gpl-3.0-standalone.html">https://www.gnu.org/licenses/gpl-3.0-standalone.html</a>.</p>

<h2>GNU Lesser General Public License</h2>
<p>I used Maddie Abboud’s really neat <a href="https://github.com/m-abboud/android-tone-player">Tone/Buzzer Generator</a> for playing intervals.
It is available under the terms of the <a href="https://www.gnu.org/licenses/licenses.en.html%23LGPL">GNU Lesser General Public License v3.0</a>.</p>

<h2>SIL Open Font License</h2>
<p>The logo is a modification of the letter Ꝙ (“Latin capital letter Q with diagonal stroke”, Unicode A758₁₆) in the font
<a href="https://software.sil.org/doulos/">Doulos SIL</a>, which is available under the
<a href="https://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=ofl">SIL Open Font License</a>.</p>

<h2>Creative Commons License</h2>
<p>The icons are mostly by Google and are available under the
<a href="https://creativecommons.org/licenses/by/4.0/deed.en">Creative Commons Attribution 4.0 International</a> license.</p>

    ]]></string>
</resources>